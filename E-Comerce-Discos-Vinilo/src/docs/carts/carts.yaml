paths:
  /carts:
    get:
      summary: Se obtienen todos los carritos de los distintos usuarios
      tags:
        - Carts
      security:
        - jwt: ["Administrador"]
      responses:
        "200":
          description: Se obtienen todos los carritos de manera exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Carts"
        "500":
          description: Error en el servidor al hacer la consulta
    post:
      summary: Crear un carrito
      tags:
        - Carts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/createUpdateCart"
      responses:
        "200":
          description: El carrito se crea de manera exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Carts"
        "500":
          description: Error en el servidor al hacer la consulta

  /cart/{cartId}:
    get:
      summary: Obtener un carrito a partir del id del mismo
      tags:
        - Carts
      security:
        - jwt: ["Usuario", "Premium"]
      parameters:
        - name: cartId
          in: path
          required: true
          description: El id de carrito a consultar
          schema:
            $type: string
      responses:
        "200":
          description: Se obtuvo el carrito de manera exitosa
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Carts"
            text/html:
              schema:
                type: string
                example: "<html><body><h1>Respuesta Renderizada</h1><p>Contenido HTML</p></body></html>"
        "500":
          description: Error en el servidor al hacer la consulta
    delete:
      summary: Eliminar un carrito a partir del id del mismo
      tags:
        - Carts
      security:
        - jwt: ["Administrador"]
      parameters:
        - name: cartId
          in: path
          required: true
          description: El id del Carrito a eliminar
          schema:
            $type: string
      responses:
        "200":
          description: Se eliminó el carrito de manera exitosa
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Carts"
        "500":
          description: Error en el servidor al hacer la consulta

  /cart/{cartId}/product/{productId}:
    post:
      summary: Agregar un producto al carrito
      tags:
        - Carts
      security:
        - jwt: ["Usuario", "Premium"]
      parameters:
        - in: path
          name: cartId
          required: true
          schema:
            type: string
            description: Id del carrito
        - in: path
          name: productId
          required: true
          schema:
            type: string
            description: Id del producto
      responses:
        "200":
          description: El producto se agregó al carrito de manera exitosa
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Carts"
        "500":
          description: Error en el servidor al hacer la consulta
    put:
      summary: Actualizar un producto en el carrito
      tags:
        - Carts
      security:
        - jwt: ["Usuario", "Premium"]
      parameters:
        - in: path
          name: cartId
          required: true
          schema:
            type: string
            description: ID del carrito
        - in: path
          name: productId
          required: true
          schema:
            type: string
            description: ID del producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/schemas/Products"
      responses:
        "200":
          description: El producto se actualizó en el carrito de manera exitosa
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Carts"
        "500":
          description: Error en el servidor al hacer la consulta
    delete:
      summary: Eliminar un producto del carrito
      tags:
        - Carts
      security:
        - jwt: ["Usuario", "Premium"]
      parameters:
        - in: path
          name: cartId
          required: true
          schema:
            type: string
            description: Id del carrito
        - in: path
          name: productId
          required: true
          schema:
            type: string
            description: Id del producto
      responses:
        "200":
          description: El producto se eliminó del carrito de manera exitosa
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Carts"
        "500":
          description: Error en el servidor al hacer la consulta

components:
  schemas:
    Carts:
      type: object
      properties:
        _id:
          type: string
          description: Id generado por MongoDB
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                description: Id del producto (generado por MongoDB)
              quantity:
                type: number
                description: Cantidad del producto en el carrito
      example:
        _id: "6567849024d8608af3266c43"
        products:
          - productId: "615z6844534606f2468a66e77"
            quantity: 4

  # Definir Body, que debe entregar el cliente en la petición
  requestBodies:
    createUpdateCart:
      type: object
      properties:
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                description: Id del producto (generado por MongoDB)
              quantity:
                type: number
                description: Cantidad del producto en el carrito otorgada por el cliente
      example:
        products:
          - productId: "615z6844534606f2468a66e77"
            quantity: 6
